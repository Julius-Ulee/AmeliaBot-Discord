import { ExtractorPlugin, Song, Playlist } from 'distube';
import { GuildMember } from 'discord.js';

declare enum SearchType {
    Track = "track",
    Playlist = "playlist"
}
interface SoundCloudPluginOptions {
    clientId?: string;
    oauthToken?: string;
}
declare class SoundCloudPlugin extends ExtractorPlugin {
    #private;
    constructor(options?: SoundCloudPluginOptions);
    static search(query: string, type?: SearchType.Track, limit?: number): Promise<Song<undefined>[]>;
    static search(query: string, type: SearchType.Playlist, limit?: number): Promise<Playlist<undefined>[]>;
    static search(query: string, type?: SearchType, limit?: number): Promise<Song<undefined>[] | Playlist<undefined>[]>;
    search(query: string, type?: SearchType.Track, limit?: number): Promise<Song<undefined>[]>;
    search(query: string, type: SearchType.Playlist, limit?: number): Promise<Playlist<undefined>[]>;
    search(query: string, type?: SearchType, limit?: number): Promise<Song<undefined>[] | Playlist<undefined>[]>;
    validate(url: string): Promise<boolean>;
    resolve(url: string, options: {
        member?: GuildMember;
        metadata?: any;
    }): Promise<Playlist<any> | Song<any>>;
    getRelatedSongs(url: string | number): Promise<Song<unknown>[]>;
    getStreamURL(url: string): Promise<string>;
}

export { SearchType, SoundCloudPlugin, SoundCloudPluginOptions, SoundCloudPlugin as default };
